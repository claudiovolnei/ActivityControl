@page "/login"
@using Newtonsoft.Json
@inject AuthService auth
@inject IJSRuntime jsr

<h3>Login</h3>

<p>@message</p>

<EditForm Model="user" OnValidSubmit="OnValid" style="max-width:500px;">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="mb-2">
		<InputText class="form-control" @bind-Value="user.UserName" placeholder="Enter Username"></InputText>
	</div>
	<div class="mb-2">
		<InputText type="password" class="form-control" @bind-Value="user.Password" placeholder="Enter Password"></InputText>
	</div>
	<div class="mb-2 text-right">
		<button class="btn btn-secondary" disabled="@isDisabled">login</button>
	</div>
</EditForm>

@code {
	LoginDto user = new LoginDto();
	string message = string.Empty;
	bool isDisabled = false;


	private async Task OnValid()
	{
		isDisabled = true;
		ResponseDto response = await auth.Login(user);

		if(response is null) message = "Problema ao logar!";
		else if (response.Success)
		{
			var json = JsonConvert.SerializeObject(response.Data);
			var dictionary = JsonConvert.DeserializeObject<Dictionary<string, string>>(json);
			await jsr.InvokeVoidAsync("localStorage.setItem", "user", $"{user.UserName};{dictionary["token"]}").ConfigureAwait(false);
			
		}
	}
}
